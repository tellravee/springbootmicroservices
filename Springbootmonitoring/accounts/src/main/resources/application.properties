#spring.datasource.url=jdbc:h2:mem:testdb
spring.application.name=accounts
spring.profiles.active=dev
spring.config.import=optional:configserver:http://localhost:8071
server.port=8080
management.endpoints.web.exposure.include=*
#to register as Eureka client.
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8070/eureka


## Configuring info endpoint
info.app.name= Accounts Microservice
info.app.description = Tell Ravee Account Application
info.app.version=1.0.0
management.info.env.enabled = true
#for graceful shutdown
endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true

#Circuit breaker
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
# The number of calls to be monitored.
resilience4j.circuitbreaker.instances.myCustomerDetails.minimum-number-of-calls=5
##Failure Thrshold limit. (maximum 50% failure it will open the circuit)
resilience4j.circuitbreaker.instances.myCustomerDetails.failure-rate-threshold=50
#Time in seconds for the circuit breaker to open half state.
resilience4j.circuitbreaker.instances.myCustomerDetails.wait-duration-in-open-state=30000
resilience4j.circuitbreaker.instances.myCustomerDetails.permitted-number-of-calls-in-half-open-state=2

##Retry logic.
#resilience4j.retry.configs.default.
#whenever the API method fails it will make additional 2 retries.
resilience4j.retry.instances.myCustomerDetails.max-attempts=3
#maximum time duration between 2 calls
resilience4j.retry.instances.myCustomerDetails.wait-duration=3000

#Rate Limiter Pattern
resilience4j.ratelimiter.configs.default.register-health-indicator=true
resilience4j.ratelimiter.instances.sayHello.limit-for-period=1
resilience4j.ratelimiter.instances.sayHello.limit-refresh-period=3000
resilience4j.ratelimiter.instances.sayHello.timeout-duration=3000

#Zipkin entries
#spring.sleuth.sampler.rate=100
#spring.zipkin.base-url=http://localhost:9411
#Synchronous way of sending logs to zipkin dashboard
spring.sleuth.sampler.percentage=1
spring.sleuth.sampler.probability=100
spring.sleuth.sampler.rate=100
spring.zipkin.base-url=http://localhost:9411

#Asynchronous aggregation of logs to queues
#spring.zipkin.sender.type=rabbit
#spring.zipkin.rabbitmq.queue=zipkin
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
